% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preprocFromDA1.R
\name{preprocFromDA1}
\alias{preprocFromDA1}
\title{Pre-processing of data using DA1 files}
\usage{
preprocFromDA1(
  data_dir = NULL,
  ResX = 1920,
  ResY = 1080,
  maxtrial = 999,
  tBlink = 150,
  padding = 0,
  addNonFixatedWords = TRUE,
  CrashOnMissingFix = FALSE,
  DontMapBlinks = TRUE
)
}
\arguments{
\item{data_dir}{Input of data files to be processed, as a directory that contains BOTH the ASC
and the DA1 files for all subjects}

\item{ResX}{X screen resolution in pixels}

\item{ResY}{Y screen resolution in pixels}

\item{maxtrial}{Maximum number of trials in the experiment}

\item{tBlink}{Time in milliseconds for detecting blinks before or after fixation.
If there is a blink x milliseconds before or after the fixation, it will be marked
as having a blink. The default is 50 ms.}

\item{padding}{Padding amount used around the text margin (used to assign fixations close to the margin to a line). Default is 0.
If padding is greater than 0, then all letter positions will be decremented by the specified number.}

\item{addNonFixatedWords}{A logical indicating whether to add non-fixated words to the dataset (default= TRUE).
Useful for skipping analyses, etc.}

\item{CrashOnMissingFix}{A logical indicating whether to stop script if a DA1 fixation is not found in ASC data file.
This can occur if you let EyeDoctor merge fixations.}

\item{DontMapBlinks}{A logical indicating whether to map fixation type (progressive, regressive) if the there is a
blink on the current fixation (or immediately before or after it, as determined by tBlink; see above). If set to TRUE (default),
fixations types are not mapped.}
}
\value{
A data frame containing the data
}
\description{
This function reads in data from .asc files and DA1 files (from EyeDoctor) and merges them together.
It makes it possible to re-adjust the raw data for the vertical position of fixations using EyeDoctor's
DA1 data after manual processing.
}
\author{
Martin R. Vasilev
}
